// <auto-generated />
using System;
using EBCEYS.Server_configuration.ConfigDatabase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EBCEYS.Server_configuration.Migrations
{
    [DbContext(typeof(ConfigurationDatabaseContext))]
    partial class ConfigurationDatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.2");

            modelBuilder.Entity("EBCEYS.Server_configuration.ConfigDatabase.ConfigurationDBEntity", b =>
                {
                    b.Property<string>("FilePath")
                        .HasColumnType("TEXT")
                        .HasColumnName("file_path");

                    b.Property<string>("ContainerFilePath")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("container_file_path");

                    b.Property<string>("ContainerId")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("container_id");

                    b.Property<DateTime>("FileLastUpdate")
                        .HasColumnType("TEXT")
                        .HasColumnName("file_last_update");

                    b.Property<DateTime>("FileMTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("file_m_time");

                    b.Property<bool>("IsExists")
                        .HasColumnType("INTEGER")
                        .HasColumnName("is_exists");

                    b.HasKey("FilePath");

                    b.HasIndex("ContainerId");

                    b.ToTable("configuration_files");
                });

            modelBuilder.Entity("EBCEYS.Server_configuration.ConfigDatabase.ContainerDBEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<string>("ConfigurationPath")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("configuration_path");

                    b.Property<DateTimeOffset?>("DeletionUTC")
                        .HasColumnType("TEXT")
                        .HasColumnName("marked_for_deletion_UTC");

                    b.Property<bool>("IsExists")
                        .HasColumnType("INTEGER")
                        .HasColumnName("is_exists");

                    b.Property<DateTimeOffset>("LastConfigSetUTC")
                        .HasColumnType("TEXT")
                        .HasColumnName("last_config_set_UTC");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("containers");
                });

            modelBuilder.Entity("EBCEYS.Server_configuration.ConfigDatabase.ConfigurationDBEntity", b =>
                {
                    b.HasOne("EBCEYS.Server_configuration.ConfigDatabase.ContainerDBEntity", "Container")
                        .WithMany("Configs")
                        .HasForeignKey("ContainerId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Container");
                });

            modelBuilder.Entity("EBCEYS.Server_configuration.ConfigDatabase.ContainerDBEntity", b =>
                {
                    b.Navigation("Configs");
                });
#pragma warning restore 612, 618
        }
    }
}
